name: CI/CD Pipeline

on:
  push:
    branches:
      - qa
      - develop
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run lint
      run: npm run lint

    - name: Build project
      run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/qa' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel environment information
      run: vercel pull --yes --environment=${{ github.ref == 'refs/heads/master' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}

    - name: Build project artifacts
      run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

    - name: Deploy to Vercel
      run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} ${{ github.ref == 'refs/heads/master' && '--prod' || '' }}
